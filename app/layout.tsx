'use client'
import { Sidebar } from "@/components/Sidebar";
import { lightTheme, darkTheme } from "@/styles/theme";
import { Box, CssBaseline, ThemeProvider } from "@mui/material";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { useEffect, useState } from "react";
import { Toaster } from "react-hot-toast";
import LoadingBar from "react-top-loading-bar";
import { usePathname } from "next/navigation";
import Loader from "@/UI/Loader";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const [isdarkMode, setIsdarkMode] = useState(false)
  const [isExpanded, setIsExpanded] = useState(true);
  const [progress, setProgress] = useState(0);
  const [loading, setLoading] = useState(true);
  const pathname = usePathname();

  useEffect(() => {
    setProgress(30);
    setLoading(true);
    const timer = setTimeout(() => {
      setProgress(100);
      setLoading(false);
    }, 2000);
    return () => clearTimeout(timer);
  }, [pathname]);

  const toggleTheme = () => {
    setIsdarkMode(!isdarkMode);
  }
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ThemeProvider theme={isdarkMode ? darkTheme : lightTheme}>
          <CssBaseline />
          <LoadingBar
            color='green'
            progress={progress}
            onLoaderFinished={() => setProgress(0)}
          />
          <Box sx={{
            display: 'flex',
            zIndex: 50,
            minHeight: '100vh',
            bgcolor: 'background.default',
            color: 'text.primary'
          }}>
            <Sidebar
              toggleTheme={toggleTheme}
              isdarkMode={isdarkMode}
              expanded={isExpanded}
              onToggle={setIsExpanded}
            />
            <Box sx={{ flexGrow: 1 }}>
              {loading ? <Loader /> : children}
            </Box>
            <Toaster />
          </Box>
        </ThemeProvider>
      </body>
    </html>
  );
}
